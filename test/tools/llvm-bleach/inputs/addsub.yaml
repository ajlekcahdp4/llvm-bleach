instructions:
  - add:
      func: |
        ; ModuleID = 'addsub.c'
        source_filename = "addsub.c"
        target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
        target triple = "x86_64-unknown-linux-gnu"
        @regs = external local_unnamed_addr global [32 x i32], align 16
        ; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable
        define void @add(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {
          %4 = sext i32 %0 to i64
          %5 = getelementptr [32 x i32], ptr @regs, i64 0, i64 %4
          %6 = load i32, ptr %5, align 4, !tbaa !4
          %7 = sext i32 %1 to i64
          %8 = getelementptr [32 x i32], ptr @regs, i64 0, i64 %7
          %9 = load i32, ptr %8, align 4, !tbaa !4
          %10 = add i32 %9, %6
          %11 = sext i32 %2 to i64
          %12 = getelementptr [32 x i32], ptr @regs, i64 0, i64 %11
          store i32 %10, ptr %12, align 4, !tbaa !4
          ret void
        }
        attributes #0 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "zero-call-used-regs"="used-gpr" }
        !llvm.module.flags = !{!0, !1, !2}
        !llvm.ident = !{!3}
        !0 = !{i32 1, !"wchar_size", i32 4}
        !1 = !{i32 8, !"PIC Level", i32 2}
        !2 = !{i32 7, !"uwtable", i32 2}
        !3 = !{!"clang version 18.1.8"}
        !4 = !{!5, !5, i64 0}
        !5 = !{!"int", !6, i64 0}
        !6 = !{!"omnipotent char", !7, i64 0}
        !7 = !{!"Simple C/C++ TBAA"}
