--- |
  ; ModuleID = 'main'
  source_filename = "main"
  target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n32:64-S128"
  target triple = "riscv64-unknown-linux-gnu"
  
  ; Materializable
  define void @SnippyFunction() {
    ret void
  }
  
  ; Materializable
  define internal void @fun1() {
    ret void
  }
  
  ; Materializable
  define internal void @fun2() {
    ret void
  }
  
  ; Materializable
  define internal void @fun3() {
    ret void
  }

...
---
name:            SnippyFunction
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: false
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:       []
liveins:
  - {reg: '$x0', virtual-reg: '' }
  - {reg: '$x1', virtual-reg: '' }
  - {reg: '$x2', virtual-reg: '' }
  - {reg: '$x3', virtual-reg: '' }
  - {reg: '$x4', virtual-reg: '' }
  - {reg: '$x5', virtual-reg: '' }
  - {reg: '$x6', virtual-reg: '' }
  - {reg: '$x7', virtual-reg: '' }
  - {reg: '$x8', virtual-reg: '' }
  - {reg: '$x9', virtual-reg: '' }
  - {reg: '$x11', virtual-reg: '' }
  - {reg: '$x12', virtual-reg: '' }
  - {reg: '$x13', virtual-reg: '' }
  - {reg: '$x2', virtual-reg: '' }
  - {reg: '$x15', virtual-reg: '' }
  - {reg: '$x16', virtual-reg: '' }
  - {reg: '$x17', virtual-reg: '' }
  - {reg: '$x18', virtual-reg: '' }
  - {reg: '$x19', virtual-reg: '' }
  - {reg: '$x20', virtual-reg: '' }
  - {reg: '$x21', virtual-reg: '' }
  - {reg: '$x22', virtual-reg: '' }
  - {reg: '$x23', virtual-reg: '' }
  - {reg: '$x24', virtual-reg: '' }
  - {reg: '$x25', virtual-reg: '' }
  - {reg: '$x26', virtual-reg: '' }
  - {reg: '$x27', virtual-reg: '' }
  - {reg: '$x28', virtual-reg: '' }
  - {reg: '$x29', virtual-reg: '' }
  - {reg: '$x30', virtual-reg: '' }
  - {reg: '$x31', virtual-reg: '' }

frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
body:             |
  bb.6:
    successors: %bb.0(0x80000000)
    liveins: $x2
  
    $x16 = ADD $x0, $x0
    $x16 = ADD $x16, $x2
    $x2 = ADDI $x0, 0
    $x3 = ADD $x2, $x2
    $x30 = ADD $x18, $x29
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    $x8 = ADD $x0, $x4
    $x12 = ADD $x0, $x0
    PseudoBR %bb.0
  
  bb.0:
    successors: %bb.7(0x40000000), %bb.0(0x40000000)
  
    $x8 = ADD $x8, $x0
    BNE $x8, $x12, %bb.0
    PseudoBR %bb.7
  
  bb.7:
    successors: %bb.1(0x80000000)
  
    $x9 = ADD $x19, $x8
    $x13 = ADD $x0, $x4
    $x3 = ADD $x0, $x0
    PseudoBR %bb.1
  
  bb.1:
    successors: %bb.8(0x40000000), %bb.1(0x40000000)
  
    $x19 = MUL $x7, $x29
    $x28 = ADD $x21, $x12
    $x13 = ADD $x13, $x1
    BNE $x13, $x3, %bb.1
    PseudoBR %bb.8
  
  bb.8:
    successors: %bb.2(0x80000000)
  
    $x31 = MUL $x9, $x2
    $x6 = MUL $x26, $x17
    $x30 = ADD $x0, $x4
    $x3 = ADD $x0, $x0
    PseudoBR %bb.2
  
  bb.2:
    successors: %bb.9(0x40000000), %bb.2(0x40000000)
  
    $x7 = MUL $x29, $x12
    $x26 = MUL $x28, $x10
    $x30 = ADD $x30, $x1
    BNE $x30, $x14, %bb.2
    PseudoBR %bb.9
  
  bb.9:
    successors: %bb.3(0x80000000)
  
    $x10 = ADD $x4, $x25
    $x9 = MUL $x14, $x21
    $x24 = ADD $x0, $x4
    $x19 = ADD $x0, $x0
    PseudoBR %bb.3
  
  bb.3:
    successors: %bb.4(0x40000000), %bb.3(0x40000000)
  
    $x24 = ADD $x24, $x1
    BNE $x24, $x19, %bb.3
    PseudoBR %bb.4
  
  bb.4:
    successors: %bb.5(0x80000000)
  
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    BNE $x21, $x11, %bb.5
    PseudoBR %bb.5
  
  bb.5:
    $x23 = MUL $x31, $x2
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    $x25 = ADD $x1, $x20
    $x25 = ADD $x25, $x16
    $x2 = LD $x25, 0
    PseudoRET

...
---
name:            fun1
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: false
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
body:             |
  bb.3:
    successors: %bb.0(0x80000000)
    liveins: $x5, $x31, $x19, $x11, $x1
  
    $x2 = ADDI $x2, -16
    SD $x5, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x31, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x19, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x11, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x1, $x2, 0
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    $x11 = ADDI $x0, 4
    $x5 = ADDI $x0, 0
    PseudoBR %bb.0
  
  bb.0:
    successors: %bb.1(0x40000000), %bb.0(0x40000000)
  
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    $x11 = ADDI $x11, -1
    BNE $x11, $x5, %bb.0
    PseudoBR %bb.1
  
  bb.1:
    successors: %bb.2(0x80000000)
  
    BNE $x4, $x23, %bb.2
    PseudoBR %bb.2
  
  bb.2:
    $x19 = ADD $x0, $x24
    $x31 = MUL $x6, $x15
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    PseudoCALL target-flags(riscv-call) @fun2, implicit-def $x1
    $x1 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x11 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x19 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x31 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x5 = LD $x2, 0
    $x2 = ADDI $x2, 16
    PseudoRET

...
---
name:            fun2
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: false
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
body:             |
  bb.3:
    successors: %bb.0(0x80000000)
    liveins: $x22, $x12, $x0, $x9, $x30, $x1, $x8
  
    $x2 = ADDI $x2, -16
    SD $x22, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x12, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x0, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x9, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x30, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x1, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x8, $x2, 0
    $x12 = ADD $x28, $x8
    PseudoCALL target-flags(riscv-call) @fun3, implicit-def $x1
    $x9 = ADD $x31, $x2
    PseudoCALL target-flags(riscv-call) @fun3, implicit-def $x1
    $x22 = ADDI $x0, 4
    $x8 = ADDI $x0, 0
    PseudoBR %bb.0
  
  bb.0:
    successors: %bb.1(0x40000000), %bb.0(0x40000000)
  
    PseudoCALL target-flags(riscv-call) @fun3, implicit-def $x1
    $x0 = ADD $x22, $x18
    $x22 = ADDI $x22, -1
    BNE $x22, $x8, %bb.0
    PseudoBR %bb.1
  
  bb.1:
    successors: %bb.2(0x80000000)
  
    $x30 = MUL $x1, $x2
    BNE $x28, $x3, %bb.2
    PseudoBR %bb.2
  
  bb.2:
    PseudoCALL target-flags(riscv-call) @fun3, implicit-def $x1
    $x8 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x1 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x30 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x9 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x0 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x12 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x22 = LD $x2, 0
    $x2 = ADDI $x2, 16
    PseudoRET

...
---
name:            fun3
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: false
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
body:             |
  bb.3:
    successors: %bb.0(0x80000000)
    liveins: $x17, $x7, $x14, $x9, $x30, $x6, $x13, $x20
  
    $x2 = ADDI $x2, -16
    SD $x17, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x7, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x14, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x9, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x30, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x6, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x13, $x2, 0
    $x2 = ADDI $x2, -16
    SD $x20, $x2, 0
    $x13 = MUL $x8, $x31
    $x13 = ADD $x29, $x6
    $x20 = ADDI $x0, 4
    $x6 = ADDI $x0, 0
    PseudoBR %bb.0
  
  bb.0:
    successors: %bb.1(0x40000000), %bb.0(0x40000000)
  
    $x20 = ADDI $x20, -1
    BNE $x20, $x6, %bb.0
    PseudoBR %bb.1
  
  bb.1:
    successors: %bb.2(0x80000000)
  
    $x9 = ADD $x29, $x19
    $x30 = MUL $x2, $x29
    BNE $x8, $x20, %bb.2
    PseudoBR %bb.2
  
  bb.2:
    $x7 = ADD $x12, $x9
    $x17 = ADD $x12, $x22
    $x7 = MUL $x5, $x3
    $x20 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x13 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x6 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x30 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x9 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x2 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x7 = LD $x2, 0
    $x2 = ADDI $x2, 16
    $x17 = LD $x2, 0
    $x2 = ADDI $x2, 16
    PseudoRET

...
