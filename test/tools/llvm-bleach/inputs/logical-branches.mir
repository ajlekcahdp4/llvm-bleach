--- |
  ; ModuleID = 'logical.ll'
  source_filename = "logical.c"
  target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n32:64-S128"
  target triple = "riscv64-unknown-linux-gnu"

  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwta
  define dso_local i64 @foo(i64 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #0 {
    br label %4

  4:
    ret i64 1
  }
...
---
name:            foo
alignment:       2
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: true
registers:       []
liveins:
  - { reg: '$x10', virtual-reg: '' }
  - { reg: '$x11', virtual-reg: '' }
  - { reg: '$x12', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo:
  varArgsFrameIndex: 0
  varArgsSaveSize: 0
body:             |
  bb.0 (%ir-block.3):
    liveins: $x10, $x11, $x12

    renamable $x12 = XOR killed renamable $x12, renamable $x10
    renamable $x12 = SLL killed renamable $x12, renamable $x10
    renamable $x13 = SRL renamable $x10, renamable $x12
    renamable $x11 = nsw ADD killed renamable $x13, killed renamable $x11
    renamable $x10 = OR killed renamable $x11, killed renamable $x10
    renamable $x10 = nsw SUB killed renamable $x12, killed renamable $x10
    PseudoBR %bb.1
  bb.1 (%ir-block.4):
    liveins: $x11, $x12

    renamable $x11 = SRL killed renamable $x11, renamable $x12
    PseudoRET

...
